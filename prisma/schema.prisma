generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String?
  password  String?
  role      String   @default("agent")
  createdAt DateTime @default(now())

  Client Client[]

  LearningContent LearningContent[]
}

model Client {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  phone      String        @unique
  language   String        // e.g., 'hi', 'ta', 'en'
  age        Int?
  gender     String?
  income     Float?
  goals      String[]      // e.g., ["education", "retirement"]
  createdAt  DateTime      @default(now())
  agentId    String        @db.ObjectId
  agent      User          @relation(fields: [agentId], references: [id])
  investments Investment[] // Added relation to Investment
}

model Investment {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  clientId      String   @db.ObjectId
  client        Client   @relation(fields: [clientId], references: [id])
  type          String   // E.g., "Small Cap", "Gold", etc.
  amount        Float
  startDate     DateTime
  status        String   // E.g., "active", "matured", "withdrawn"
  returns       Float?   // Optional: calculated or reported
  source        String?  // Optional: e.g., "PartnerAPI", "Manual"
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model LearningContent {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  type        String   // e.g., "video", "audio", "pdf"
  url         String
  language    String   // e.g., "hi", "ta", "en"
  tags        String[] // e.g., ["insurance", "investment"]
  createdById String   @db.ObjectId
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdAt   DateTime @default(now())
}

model Quiz {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  tags        String[]   // E.g., ['insurance', 'investment']
  language    String     // E.g., 'hi', 'en'
  createdAt   DateTime   @default(now())
  createdBy   String     @db.ObjectId
  questions   Question[]
}

model Question {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quizId    String   @db.ObjectId
  quiz      Quiz     @relation(fields: [quizId], references: [id])
  question  String
  options   String[] // 4 options stored in array
  answer    String   // correct answer text
  language  String
}

model ClientQuizAttempt {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  clientId   String   @db.ObjectId
  quizId     String   @db.ObjectId
  score      Int
  answers    String[] // selected options
  createdAt  DateTime @default(now())
}
