{
  "info": {
    "name": "Finarva API - Financial Services",
    "description": "Comprehensive financial services including expenses, investments, insurance, loans, and tax calculations",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Expenses",
      "item": [
        {
          "name": "Create Expense",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has expense data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('category');",
                  "    pm.expect(jsonData).to.have.property('amount');",
                  "});",
                  "",
                  "// Store expense ID",
                  "if (pm.response.code === 201) {",
                  "    const responseData = pm.response.json();",
                  "    pm.environment.set('expenseId', responseData.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"category\": \"marketing\",\n  \"amount\": 250.75,\n  \"date\": \"2025-09-30T10:30:00.000Z\",\n  \"description\": \"Social media advertising campaign\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/expenses",
              "host": ["{{baseUrl}}"],
              "path": ["expenses"]
            },
            "description": "Record a new business expense with category, amount, and description."
          }
        },
        {
          "name": "Get All Expenses",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/expenses",
              "host": ["{{baseUrl}}"],
              "path": ["expenses"]
            },
            "description": "Retrieve all expenses for the authenticated user."
          }
        }
      ]
    },
    {
      "name": "Investments",
      "item": [
        {
          "name": "Create Investment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has investment data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('type');",
                  "    pm.expect(jsonData).to.have.property('amount');",
                  "});",
                  "",
                  "// Store investment ID",
                  "if (pm.response.code === 201) {",
                  "    const responseData = pm.response.json();",
                  "    pm.environment.set('investmentId', responseData.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"clientId\": \"{{clientId}}\",\n  \"type\": \"STOCKS\",\n  \"amount\": 5000,\n  \"description\": \"Technology sector ETF investment\",\n  \"expectedReturn\": 8.5,\n  \"riskLevel\": \"MODERATE\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/investment",
              "host": ["{{baseUrl}}"],
              "path": ["investment"]
            },
            "description": "Create a new investment record for a client."
          }
        },
        {
          "name": "Get Investment Portfolio",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has portfolio data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/investment/{{clientId}}",
              "host": ["{{baseUrl}}"],
              "path": ["investment", "{{clientId}}"]
            },
            "description": "Get investment portfolio for a specific client."
          }
        }
      ]
    },
    {
      "name": "Tax Calculations",
      "item": [
        {
          "name": "Calculate Tax",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has tax calculation', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('taxableIncome');",
                  "    pm.expect(jsonData).to.have.property('taxAmount');",
                  "    pm.expect(jsonData).to.have.property('year');",
                  "});",
                  "",
                  "pm.test('Tax calculation is valid', function () {",
                  "    const jsonData = pm.response.json();",
                  "    const requestData = JSON.parse(pm.request.body.raw);",
                  "    const expectedTaxableIncome = requestData.income - requestData.expenses;",
                  "    pm.expect(jsonData.taxableIncome).to.eql(expectedTaxableIncome);",
                  "});",
                  "",
                  "// Store tax record ID",
                  "if (pm.response.code === 201) {",
                  "    const responseData = pm.response.json();",
                  "    pm.environment.set('taxId', responseData.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"income\": 85000,\n  \"expenses\": 15000,\n  \"year\": 2025\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tax/calculate",
              "host": ["{{baseUrl}}"],
              "path": ["tax", "calculate"]
            },
            "description": "Calculate tax liability based on income, expenses, and tax year."
          }
        },
        {
          "name": "Get Tax History",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tax/history",
              "host": ["{{baseUrl}}"],
              "path": ["tax", "history"]
            },
            "description": "Get tax calculation history for the authenticated user."
          }
        },
        {
          "name": "Generate Tax Report",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is PDF content', function () {",
                  "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/pdf');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tax/report/2025",
              "host": ["{{baseUrl}}"],
              "path": ["tax", "report", "2025"]
            },
            "description": "Generate and download a PDF tax report for a specific year."
          }
        }
      ]
    },
    {
      "name": "Loans",
      "item": [
        {
          "name": "Apply for Loan",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has loan application', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('amount');",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "});",
                  "",
                  "// Store loan ID",
                  "if (pm.response.code === 201) {",
                  "    const responseData = pm.response.json();",
                  "    pm.environment.set('loanId', responseData.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 25000,\n  \"purpose\": \"BUSINESS_EXPANSION\",\n  \"term\": 36,\n  \"interestRate\": 6.5,\n  \"collateral\": \"Business equipment and inventory\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/loans",
              "host": ["{{baseUrl}}"],
              "path": ["loans"]
            },
            "description": "Submit a new loan application with specified terms and purpose."
          }
        },
        {
          "name": "Get Loan Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has loan details', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    pm.expect(jsonData).to.have.property('amount');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/loans/{{loanId}}",
              "host": ["{{baseUrl}}"],
              "path": ["loans", "{{loanId}}"]
            },
            "description": "Check the status and details of a specific loan application."
          }
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  }
}
